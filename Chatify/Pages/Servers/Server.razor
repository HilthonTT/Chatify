@page "/Server/{Id}"
@attribute [Authorize]
@using Microsoft.AspNetCore.SignalR.Client;
@inject IUserData userData
@inject IServerData serverData
@inject IChannelData channelData
@inject IChannelCategoryData channelCategoryData
@inject IMessageData messageData
@inject IBanData banData
@inject IRoleData roleData
@inject IConfiguration config
@inject OidGenerator oidGenerator
@inject NavigationManager navManager
@inject ProtectedSessionStorage sessionStorage
@inject AuthenticationStateProvider authProvider
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<ModalComponent Id="invitationModal" Title="Select the server which you want to invite people.">
    <ChildContent>
        @if (string.IsNullOrWhiteSpace(errorMessage) is false)
        {
            <div class="text-danger">@errorMessage</div>
        }
        <input type="text" placeholder="Search"
        aria-label="Search Box" class="form-control bg-dark text-light input-section mb-3"
        @oninput="(async(txt) => await OnSearchInput((string)txt.Value))"/>
            <div class="center-children mb-3">
            <button class="btn btn-secondary btn-lg text-uppercase"
                @onclick="SendInvite">
                Send Invite
            </button>
        </div>
        @if (servers?.Count > 0)
        {
            <Virtualize Items="servers" Context="s" OverscanCount="10">
                <div class="card bg-dark clickable @GetServerClass(s) mb-4" 
                    @onclick="(() => selectedServer = s)">
                    <div class="row g-0">
                        <div class="col-md-1">
                            <div class="p-1">
                                @if (string.IsNullOrWhiteSpace(s.PictureName) is false)
                                {
                                    <div class="text-center p-3">
                                        <img src="@CreateWebPath(s.PictureName)" 
                                            class="card-img-top rounded-circle clickable" 
                                            alt="@s.OriginalPictureName"
                                            style="width: 100px; height: 100px;">
                                    </div>
                                }
                                else
                                {
                                    <div class="text-center p-3">
                                        <img src="https://dummyimage.com/1200x900/000/ffffff&text=No+image+available." 
                                            class="card-img-top rounded-circle clickable" 
                                            alt="Placeholder Image"
                                            style="width: 100px; height: 100px;">
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-11 ">
                            <div class="card-body">
                                <h5 class="card-title text-end">@s.ServerName</h5>
                                <p class="card-text text-end">
                                    @s.ServerDescription
                                </p>
                                <p class="card-text text-end">
                                    Date Created: @s.DateCreated.ToString("dd/MM/yyyy")
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </Virtualize>
        }
        else
        {
            <div class="center-children">
                <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
    </ChildContent>
</ModalComponent>

@if (ban is null)
{
    <h1 class="page-heading text-break mb-1">@server?.ServerName</h1>
    <h3 class="page-heading">@selectedChannel?.ChannelName</h3>

    <p class="text-uppercase text-center">@selectedChannel?.ChannelDescription</p>

    @if (loggedInUser is not null && selectedChannel is not null)
    {
        @if (IsUserAuthorized() == false)
        {
            <NotAuthorized />
        }
        else
        {
            <div class="container-fluid vh-100 d-flex flex-column">
              <div class="row flex-grow-1">
                  <div class="col-md-4 col-xl-2">
                    <div class="participants-list p-2">
                        <h3 class="fw-bold text-uppercase">Channels</h3>
                        <hr />
                        <ul class="list-group">
                            @if (channelCategories is not null)
                            {
                                <Virtualize Items="channelCategories" Context="cc" OverscanCount="10">              
                                    <span class="h3">@cc.CategoryName</span>
                                    <Virtualize Items="cc.Channels" Context="c" OverscanCount="10">
                                        <li class="list-group-item @GetChannelClass(c) mb-2 clickable">
                                            <span class="clickable ">
                                                <div class="clickable text-white"
                                                    @onclick="(() => LoadSelectedChannel(c))">
                                                    <span class="oi oi-chat mx-1"></span>
                                                    <span class="h5">@c.ChannelName</span>
                                                </div>
                                            </span>
                                        </li>
                                    </Virtualize>
                                </Virtualize>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-md-8 col-xl-8 messages-container">
                  <span class="text-uppercase">@GetNonReadMessagesCount()</span>
                  <CascadingValue Value="RequestChanged">
                      @if (messages is not null)
                      {
                        <Virtualize Items="messages" Context="m" OverscanCount="10">
                          <MessageComponent @key="m.Id" 
                                NonReadMessages="nonReadMessages" 
                                Message="m" 
                                Messages="messages"
                                RequestChanged="RequestChanged"
                                LoggedInUser="loggedInUser"/>
                        </Virtualize>
                        <div class="messages-mb" />
                      }
                  </CascadingValue>
                </div>
                <div class="col-md-4 col-xl-2">
                    @if (UserHasPermission())
                    {
                        <div class="bg-dark p-2 mb-4 settings-box">
                            <h3>Settings</h3>
                            <button class="btn btn-outline-secondary w-100 mb-2" @onclick="(() => SettingsPage(server))">
                                Edit
                            </button>
                        </div>
                    }
                    <div class="participants-list p-2">
                        <h3 class="fw-bold text-uppercase">Members</h3>
                        <button class="btn btn-outline-secondary w-100 mb-2" @onclick="(() => InviteFriendPage(server))">Invite</button>
                        <ul class="list-group">
                            <Virtualize Items="server?.Members" Context="m" OverscanCount="10">
                                <li class="list-group-item bg-secondary text-white mb-2">
                                    <span class="oi oi-person me-1"></span>
                                    <span class="clickable @GetMemberClass(m)" @onclick="(() => UserDetailsPage(m))">
                                        @m.DisplayName - @GetUserRole(m)
                                    </span>
                                </li>
                            </Virtualize>
                        </ul>
                    </div>
                </div>
              </div>
              @if (IsUserAllowedToChat(selectedChannel))
              {
                <div class="row fixed-bottom mb-4 mx-2">
                  <EditForm Model="model" OnValidSubmit="SendMessage">
                      <DataAnnotationsValidator />
                      <ValidationMessage For="(() => model.Text)"/>
                      <div class="col-xl-12 col-lg-12">
                        <div class="row">
                            <div class="col-2"></div>
                            <div class="col-1 message-input-controls">                      
                                <button type="button" 
                                    class="btn btn-outline-secondary form-control"
                                    data-toggle="modal"
                                    data-target="#invitationModal">
                                    Send Server Invite
                                </button>
                            </div>
                          <div class="col-6">
                            <InputTextArea placeholder="@($"Message {selectedChannel?.ChannelName}")" aria-label="Message Box"
                              class="form-control bg-dark text-light input-section" @bind-Value="model.Text" />  
                          </div>
                          <div class="col-2 message-input-controls">
                            <InputFile OnChange="LoadFiles" 
                              class="form-control bg-dark text-light input-section"
                              accept=".png,.jpg,.jpeg,.txt,.pdf"/>
                          </div>
                          <div class="col-1 message-input-controls">
                            <button type="submit" class="btn btn-outline-secondary form-control" 
                              disabled="@(IsConnected is false)">
                              Send
                          </button>
                          </div>
                        </div>
                      </div>
                  </EditForm>
                </div>
              }
            </div>
        }
    }
}
else
{
    <Banned />
}


