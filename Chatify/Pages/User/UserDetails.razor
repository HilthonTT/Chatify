@page "/userDetails/{Id}"
@attribute [Authorize]
@inject IUserData userData
@inject IConversationData conversationData
@inject IFriendRequestData requestData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider

<h1 class="text-center text-uppercase fw-bold mb-4">@user?.FullName's Profile</h1>

<div class="row justify-content-center">
  <div class="col-lg-10 col-md-8">
    <div class="card text-white bg-dark">
      <div class="card-header">
        <h2 class="card-title">@user?.FullName</h2>
        <h6 class="card-subtitle mb-2">Friend Code: @user?.FriendCode</h6>
      </div>
      <div class="card-body">
        <p class="card-text">This user has joined Chatify on @user?.DateCreated.ToString("dd/MM/yyyy")</p>
        @if (user?.Friends.Count > 0)
        {
          <h5 class="card-title">@user?.FullName's Friends</h5>
          @foreach (var f in user.Friends)
          {
            <div class="card mb-2" style="cursor:pointer;" @onclick="(() => OpenDetails(f))">
              <div class="card-body">
                <h6 class="card-subtitle mb-2 text-muted">@f.FullName</h6>
                <p class="card-text">This user has joined Chatify on @f.DateCreated.ToString("dd/MM/yyyy")</p>
              </div>
            </div>
          }
        }
      </div>
      <div class="card-footer">
        <button class="btn btn-outline-light" @onclick="ClosePage">Close</button>
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    private UserModel loggedInUser;
    private UserModel user;
    private List<ConversationModel> conversations;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);
        user = await userData.GetUserAsync(Id);
        if (loggedInUser is not null)
        {
            conversations = await conversationData.GetUserConversationsAsync(loggedInUser.Id);    
        }
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private void OpenDetails(BasicUserModel user)
    {
        navManager.NavigateTo($"/userDetails/{user.Id}");
    }
}
