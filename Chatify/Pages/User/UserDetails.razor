@page "/userDetails/{Id}"
@attribute [Authorize]
@inject IUserData userData
@inject IConversationData conversationData
@inject IFriendRequestData requestData
@inject IPrivateConversationData privateConversationData
@inject IBanData banData
@inject OidGenerator oidGenerator
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IJSRuntime JSRuntime

<ModalComponent Id="friendModal" Title=@($"Friend {user?.DisplayName}")>
    <ChildContent>
        <div class="row">
            @if (string.IsNullOrWhiteSpace(errorMessage) is false)
            {
                <div class="text-danger">@errorMessage</div>
            }
            <div class="mt-1">Are you sure you want to add @user?.DisplayName?</div>
            <div class="center-children">
                <button class="btn btn-secondary btn-lg text-uppercase mt-4" @onclick="SendFriendRequest">
                    Send Friend Request
                </button>
            </div>
        </div>
    </ChildContent>
</ModalComponent>

<ModalComponent Id="unfriendModal" Title=@($"Unfriend {user?.DisplayName}")>
    <ChildContent>
        <div class="row">
            @if (string.IsNullOrWhiteSpace(errorMessage) is false)
            {
                <div class="text-danger">@errorMessage</div>
            }
            <div class="mt-1">Are you sure you want to unfriend @user?.DisplayName?</div>
            <div class="center-children">
                <button class="btn btn-secondary btn-lg text-uppercase mt-4" @onclick="UnfriendUser">
                    Unfriend @user?.DisplayName
                </button>
            </div>
        </div>
    </ChildContent>
</ModalComponent>

<ModalComponent Id="blockModal" Title=@($"{BlockButtonText()} {user?.DisplayName}")>
    <ChildContent>
        <div class="row">
            @if (string.IsNullOrWhiteSpace(errorMessage) is false)
            {
                <div class="text-danger">@errorMessage</div>
            }
            <div class="mt-1">
                Are you sure you want to @((LoggedInUserHasBlockedUser()) ? "Unblock" : "Block") @user?.DisplayName?
            </div>
            <div class="center-children">
                <button class="btn btn-secondary btn-lg text-uppercase mt-4" @onclick="ToggleBlockUser">
                    @BlockButtonText() @user?.DisplayName
                </button>
            </div>
        </div>
    </ChildContent>
</ModalComponent>

@if (ban is null)
{
    <h1 class="page-heading mb-4">@user?.DisplayName's Profile</h1>

    <div class="rounded rounded-3 ">
      <div class="card-body">
        <div class="row justify-content-center">
          <div class="col-lg-10 col-md-8 card bg-dark p-4">
            <div class="row">
              <div class="close-button-section">
                  <button class="btn btn-close btn-close-white" @onclick="ClosePage"/>
              </div>
              <div class="col-12">
                <div class="d-flex justify-content-start">
                    <h2>@user?.DisplayName's Account</h2>
                </div>
                <p>This user joined Chatify on @user?.DateCreated.ToString("dd/MM/yyyy")</p>
                @if (loggedInUser?.Id != user?.Id)
                {
                    <div class="d-flex justify-content-between mb-4">
                        <div class="btn-group">
                            <button class="btn btn-secondary me-1" @onclick="(async() => await OpenPrivateConversation(user))">
                                Launch Conversation
                            </button>
                            @if (IsUserFriends() && HasAnyoneBlockedAnyone() is false)
                            {
                                <button class="btn btn-outline-secondary" 
                                        data-toggle="modal" 
                                        data-target="#unfriendModal">
                                    Unfriend
                                </button>
                            }
                            else if (IsUserFriends() is false && HasAnyoneBlockedAnyone() is false)
                            {
                                <button class="btn btn-outline-secondary" 
                                        data-toggle="modal" 
                                        data-target="#friendModal">
                                    Send Friend Request
                                </button>
                            }
                        </div>

                        <AuthorizeView Policy="Admin">
                            <button class="btn btn-outline-danger" @onclick="(() => OpenAdminBan(user))">Ban User</button>
                        </AuthorizeView>
                    </div>
                    <div>
                        @if (LoggedInUserHasBlockedUser() is false)
                        {
                            <button class="btn btn-danger"
                                    data-toggle="modal"
                                    data-target="#blockModal">
                                @BlockButtonText() @user?.DisplayName
                            </button>       
                        }
                    </div>
                }
                @if (user?.Friends.Count > 0)
                {
                    <hr />
                    <div>
                      <h2>@user?.DisplayName's Friends</h2>
                      <Virtualize Items="user?.Friends" Context="f" OverscanCount="10">
                          <DisplayImgComponent @key="f.Id" 
                                IsClickable="false" 
                                ImageSource="@f.FileName"
                                OpenDetails="(() => OpenDetails(f))">
                                <ChildContent>
                                    <h5 class="card-title">@f.DisplayName</h5>
                                    <p class="card-text">
                                        Friend Code: 
                                        <span class="fw-bold text-danger">@f.FriendCode</span>
                                    </p>
                                    <p class="card-text">
                                        Date Joined: @f.DateCreated.ToString("dd/MM/yyyy")
                                    </p>
                                </ChildContent>
                            </DisplayImgComponent>
                      </Virtualize>
                    </div>
                }
                <div class="row">
                    @if (conversations?.Count > 0)
                    {
                        <hr />
                        <h2 class="card-title mt-4">@user?.DisplayName's Conversations</h2>
                        <Virtualize Items="conversations" Context="c" OverscanCount="10">
                            <ConversationComponent Conversation="c" LoggedInUser="loggedInUser"/>
                        </Virtualize> 
                    }
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
}
else
{
    <Banned />
}


