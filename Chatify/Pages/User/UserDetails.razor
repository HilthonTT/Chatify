@page "/userDetails/{Id}"
@attribute [Authorize]
@inject IUserData userData
@inject IConversationData conversationData
@inject IFriendRequestData requestData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider

<h1 class="text-center text-uppercase fw-bold mb-4">@user?.DisplayName's Profile</h1>

<div class="rounded rounded-3 shadow">
  <div class="card-body">
    <div class="row justify-content-center">
      <div class="col-lg-10 col-md-8 card bg-dark p-4">
        <div class="row">
          <div class="col-11">
            <div>
              <h2>@user?.DisplayName's Account</h2>
              <p>This user joined Chatify on @user?.DateCreated.ToString("dd/MM/yyyy")</p>
            </div>
            <hr />
            @if (user?.Friends.Count > 0)
            {
                <div>
                  <h2>@user?.DisplayName's Friends</h2>
                  @foreach (var f in user.Friends)
                  {
                    <div class="bg-black p-4 clickable" @onclick="(() => OpenDetailsFriend(f))">
                      <div class="fw-bold">
                        @f.DisplayName
                      </div>
                      <div>
                        @f.DisplayName has joined Chatify on @f.DateCreated.ToString("dd/MM/yyyy")
                      </div>
                    </div>
                  }
                </div>
            }
            <hr />
            @if (conversations?.Count > 0)
            {
                <h2 class="card-title mt-4">@user?.DisplayName's Conversations</h2>
                @foreach (var c in conversations)
                {
                    <div class="card card-body create-form-layout bg-black">
                        <div class="card-body">
                            <div class="card-text mb-3">
                            <div class="fw-bold">@c.GroupName</div>
                            <div>@c.Participants.Count Participants</div>
                            <div>@c.DateCreated.ToString("dd/MM/yyyy")</div>
                            </div>
                        </div>
                    </div>
                }
            }
          </div>
          <div class="col-1">
            <div class="close-button-section">
              <button class="btn btn-close btn-close-white" @onclick="ClosePage"/>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    private UserModel loggedInUser;
    private UserModel user;
    private List<ConversationModel> conversations;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);
        user = await userData.GetUserAsync(Id);
        if (loggedInUser is not null)
        {
            conversations = await conversationData.GetUserConversationsAsync(loggedInUser.Id);    
        }
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private void OpenDetails(BasicUserModel user)
    {
        navManager.NavigateTo($"/userDetails/{user.Id}");
    }
    
    private void OpenDetailsFriend(BasicUserModel user)
    {
        navManager.NavigateTo($"/userDetails/{user.Id}", true);
    }
}
