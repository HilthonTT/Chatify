@page "/UpdateConversation/{Id}"
@attribute [Authorize]
@inject IConversationData conversationData
@inject ICategoryData categoryData
@inject IUserData userData
@inject IBanData banData
@inject IConfiguration config
@inject IAuditLogData auditLogData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IJSRuntime JSRuntime

<ModalComponent Id="conversationModal" Title=@($"Edit {conversation?.GroupName}") FooterClass="justify-content-between">
    <ChildContent>
        <EditForm Model="editingConversation" OnValidSubmit="(async() => await UpdateConversation())">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="mb-3">
                    <label class="form-label fw-bold text-uppercase" for="server-name">Server Name</label>
                    <div class="mt-1">Edit your server's name</div>
                    <ValidationMessage For="(() => editingConversation.GroupName)"/>
                    <InputText class="form-control bg-dark text-white input-section" id="server-name" 
                        @bind-Value="editingConversation.GroupName"/>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold text-uppercase" for="server-icon">Conversation Icon</label>
                    <div class="mt-1">Select an image for your conversation. This is not required.</div>
                    <ValidationMessage For="(() => editingConversation.PictureName)"/>
                    <InputFile OnChange="LoadFiles"
                        class="form-control bg-dark text-light input-section"
                        accept=".png,.jpg,.jpeg"/>
                </div>
                <div class="center-children">
                    <button class="btn btn-secondary w-100 btn-lg text-uppercase mt-4 mb-2" 
                        type="submit">
                        Update
                    </button>
                </div>
            </div>
        </EditForm>
    </ChildContent>
    <ButtonContent>
        <button type="button" 
            class="btn btn-outline-warning" 
            @onclick="ClearPicture">
            Clear Picture
        </button>
        @if (selectedConversation is null)
        {
            <button class="btn btn-outline-danger" 
                type="submit" @onclick="(() => selectedConversation = conversation)">
                Archive
            </button>
        }
        else
        {
            <div class="btn-group">
                <button class="btn btn-outline-success" @onclick="ArchiveConversation">
                    Archive
                </button>
                <button class="btn btn-outline-danger" @onclick="(() => selectedConversation = null)">
                    Cancel
                </button>
            </div>
        }
    </ButtonContent>
</ModalComponent>

@if (ban is null)
{
   <h1 class="page-heading mb-4">Update @conversation?.GroupName</h1>

    @if (loggedInUser?.Id != conversation?.Owner.Id)
    {
        <NotAuthorized />
    }
    else
    {   
        @if (conversation is not null)
        {
            <div class="card-body">
                <div class="row justify-content-center">
                    <div class="col-lg-10 col-md-8 card bg-dark p-4">
                        <div class="row">
                            <div class="close-button-section">
                                <button class="btn btn-close btn-close-white"
                                @onclick="(() => ReturnToConversation(conversation))"/>
                            </div>
                            <div class="col-12">
                                <div>
                                    <div class="center-children mt-2">
                                        @if (string.IsNullOrWhiteSpace(conversation.PictureName) is false)
                                        {
                                            <img src="@CreateWebPath(conversation.PictureName)"
                                                class="img-fluid border border-secondary rounded-circle" 
                                                alt="@conversation.OriginalPictureName"
                                                style="width: 300px; height: 300px;">
                                        }
                                        else
                                        {
                                            <img src="https://dummyimage.com/1200x900/000/ffffff&text=No+image+available." 
                                                class="img-fluid border border-secondary rounded-circle" 
                                                alt="Placeholder Image"
                                                style="width: 300px; height: 300px;">
                                        }
                                    </div>
                                    <h2 class="conversation-title text-center">
                                        @conversation.GroupName
                                    </h2>
                                    <p class="conversation-info text-center">
                                        The Owner: @conversation.Owner.DisplayName
                                    </p>
                                    <p class="conversation-info text-center">
                                        This was created on: @conversation.DateCreated.ToString("dd/MM/yyyy")
                                    </p>
                                    <div class="btn-group-vertical w-100">
                                        <button class="btn btn-secondary mb-2"
                                            data-toggle="modal" 
                                            data-target="#conversationModal">
                                            Edit Conversation
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}
else
{
    <Banned />
}


