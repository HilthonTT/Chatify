@page "/Bans"
@attribute [Authorize(Policy = "Admin")]
@inject IUserData userData
@inject IBanData banData
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navManager
@inject ProtectedSessionStorage sessionStorage

<h1 class="page-heading mb-4">Bans</h1>

<div class="row">
    <div class="text-uppercase fw-bold">@bans?.Count Current Active Bans</div>
    <div class="col-md-8 col-xl-12 btn-group">
        <button class="btn text-uppercase fw-bold me-2 @SortedByNewClass(true)"
            @onclick="(async() => await OrderByNew(true))">
            New
        </button>
        <button class="btn text-uppercase fw-bold @SortedByNewClass(false)"
            @onclick="(async() => await OrderByNew(false))">
            Active
        </button>
    </div>
</div>

<div class="row mt-2">
    <div class="col-md-12 col-xl-12">
        <input type="text" placeholder="Search"
            aria-label="Search Box" class="form-control bg-dark text-light input-section"
            @oninput="(async(txt) => await OnBanSearchInput((string)txt.Value))"/>
    </div>
    <div class="col-12 d-block d-md-none">
        @if (users is not null && showUsernames)
        {
            <div class="participants-list p-2">
                <h3 class="fw-bold text-uppercase">Users</h3>
                <input type="text" placeholder="Search User"
                    aria-label="Search User Box" 
                    class="form-control bg-dark text-light input-section mb-2"
                    @oninput="(async(txt) => await OnUserSearchInput((string)txt.Value))"/>
                <ul class="list-group">
                    <li class="list-group-item @SelectedUsernameClass() text-white mb-2 clickable" 
                        @onclick="(() => OnUsernameClick())">
                        <span class="oi oi-person me-1"></span>
                        All
                    </li>
                    <Virtualize Items="users" Context="u" OverscanCount="10">
                        <li class="list-group-item @SelectedUsernameClass(u.DisplayName) text-white mb-2 clickable" 
                        @onclick="(() => OnUsernameClick(u.DisplayName))">
                            <span class="oi oi-person me-1"></span>
                            @u.DisplayName
                        </li>
                    </Virtualize>
                </ul>
            </div>
        }
        else
        {
            <div class="participants-list p-2">
                <h3 class="fw-bold text-uppercase">Users</h3>
                <ul class="list-group">
                    @if (users is not null)
                    {
                        <li class="list-group-item @SelectedUsernameClass(selectedUsername) text-white mb-2 clickable" 
                        @onclick="(() => showUsernames = true)">
                            <span class="oi oi-person me-1"></span>
                            @selectedUsername
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-9 col-xl-10">
        @if (bans is not null)
        {
            <Virtualize Items="bans" Context="b" OverscanCount="10">
                 <DisplayImgComponent @key="b.Id" 
                    ImageSource="@b.UserBanned.FileName" 
                    IsClickable="true"
                    OpenDetails="(() => OpenDetails(b))">
                    <ChildContent>
                        <h5 class="card-title h4">@b.UserBanned.DisplayName</h5>
                        <div class="card-text">
                            Banned Until: @b.BannedUntil.ToString("dd/MM/yyyy HH:mm")
                        </div>
                        <div class="card-text">
                            Banned Until: @b.BannedUntil.ToString("dd/MM/yyyy HH:mm")
                        </div>               
                        <div class="card-text">
                            Status: @((b.IsActive ? "Active" : "Inactive"))
                        </div>
                    </ChildContent>
                 </DisplayImgComponent>
            </Virtualize>
        }
    </div>
    <div class="col-md-3 col-xl-2 d-none d-md-block">
        @if (users is not null)
        {
            <div class="participants-list p-2">
                <h3 class="fw-bold text-uppercase">Users</h3>
                <input type="text" placeholder="Search User"
                    aria-label="Search User Box" 
                    class="form-control bg-dark text-light input-section mb-2"
                    @oninput="(async(txt) => await OnUserSearchInput((string)txt.Value))"/>
                <ul class="list-group">
                    <li class="list-group-item @SelectedUsernameClass() text-white mb-2 clickable" 
                        @onclick="(() => OnUsernameClick())">
                        <span class="oi oi-person me-1"></span>
                        All
                    </li>
                    <Virtualize Items="users" Context="u" OverscanCount="10">
                        <li class="list-group-item @SelectedUsernameClass(u.DisplayName) text-white mb-2 clickable" 
                        @onclick="(() => OnUsernameClick(u.DisplayName))">
                            <span class="oi oi-person me-1"></span>
                            @u.DisplayName
                        </li>
                    </Virtualize>
                </ul>
            </div>
        }
    </div>
</div>


