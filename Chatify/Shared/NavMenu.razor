@inject IUserData userData
@inject IFriendRequestData requestData
@inject IConfiguration config
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject ProtectedSessionStorage sessionStorage

<nav class="navbar navbar-expand-lg navbar-dark bg-dark p-3">
    <a class="navbar-brand" href="/">Chatify</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item active">
                <a class="nav-link" href="/">Conversations</a>
            </li>
            <AuthorizeView>
                <Authorized>
                    <li class="nav-item">
                        <a class="nav-link" @onclick="OpenServers">
                            Servers
                        </a>
                    </li>
                </Authorized>
            </AuthorizeView>
             <AuthorizeView>
                <Authorized>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbar-friends" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Friends
                        </a>
                        <div class="dropdown-menu dropdown-menu-dark  accordion-body" aria-labelledby="navbar-friends">
                            <a class="dropdown-item" @onclick="OpenFriendRequests">Friend Requests</a>
                            <a class="dropdown-item" @onclick="OpenSendFriendRequest">Send Friend Request</a>
                        </div>
                    </li>
                </Authorized>
            </AuthorizeView>
        </ul>
        <div class="d-flex">
            <AuthorizeView Policy="Admin">
                <Authorized>
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0 horizontal-children">
                        <li class="nav-item dropdown">
                            <div class="nav-link dropdown-toggle admin-text me-1"
                                id="navbar-admin" 
                                data-toggle="dropdown" 
                                aria-haspopup="true" 
                                aria-expanded="false">
                                Admin
                            </div>
                            <div class="dropdown-menu dropdown-menu-dark accordion-body" aria-labelledby="navbar-admin">
                                <a class="dropdown-item" href="/Bans">Bans</a>
                                <a class="dropdown-item" href="/BanAppeals">BanAppeals</a>
                            </div>
                        </li>
                    </ul>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0 horizontal-children">
                        <li class="nav-item">
                            <a class="nav-link" href="MicrosoftIdentity/Account/SignOut">
                                Logout
                            </a>
                        </li>
                    </ul>
                </Authorized>
                <NotAuthorized>
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0 horizontal-children">
                        <li class="nav-item navbar-nav me-auto mb-2 mb-lg-0 horizontal-children">
                            <a class="nav-link" href="MicrosoftIdentity/Account/SignIn">
                                Login
                            </a>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>
            @if (loggedInUser is not null)
            {
                <div class="nav-item nav-link text-white clickable horizontal-children" 
                    @onclick="OpenProfile">
                    <div>
                        <span class="oi oi-person"></span> @loggedInUser.DisplayName
                    </div>
                </div>
            }
            @if (loggedInUser is not null && string.IsNullOrWhiteSpace(loggedInUser.FileName) is false)
            {
                <img src="@CreateWebPath(loggedInUser.FileName)"
                    class="img-fluid border rounded-circle mx-1" 
                    alt="@loggedInUser.FileName"
                    style="width: 50px; height: 50px;">
            }
            else
            {
                <img src="https://dummyimage.com/1200x900/000/ffffff&text=No+image+available." 
                    class="img-fluid rounded-circle"
                    alt="Placeholder Image"
                    style="width: 50px; height: 50px;">
            }
            <input class="form-control me-2 text-light bg-dark input-section" 
                type="search" 
                placeholder="Search User"
                aria-label="Search User" 
                    @oninput="((txt) => searchText = (string)txt.Value)"/>
            <button class="btn btn-outline-secondary" type="submit" @onclick="GoToUsers">Search</button>
        </div>
        
    </div>
</nav>

@code {
    private string searchText = "";
    private UserModel loggedInUser;
    private List<FriendRequestModel> friendRequests;

    protected override async Task OnInitializedAsync()
    {
        loggedInUser = await authProvider.GetUserFromAuth(userData);
        if (loggedInUser is not null)
        {
            friendRequests = await requestData.GetUserPendingFriendRequestsAsync(loggedInUser.Id);
        }
    }

    private void GoToUsers()
    {
        if (string.IsNullOrWhiteSpace(searchText))
        {
            navManager.NavigateTo($"/Users");
        }

        navManager.NavigateTo($"/Users/{searchText}", true);
    }

    private string CreateWebPath(string relativePath)
    {
        return Path.Combine(config.GetValue<string>("WebStorageRoot"), relativePath);
    }

    private void OpenProfile()
    {
        navManager.NavigateTo("/Profile");
    }

    private void OpenServers()
    {
        navManager.NavigateTo("/Servers");
    }

    private void OpenFriendRequests()
    {
        navManager.NavigateTo("/FriendRequests");
    }

    private void OpenSendFriendRequest()
    {
        navManager.NavigateTo("/SendFriendRequest");
    }
}
